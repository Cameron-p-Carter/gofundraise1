// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gofundraise3.Data;

#nullable disable

namespace gofundraise3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("gofundraise3.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Redesign company website with modern UI/UX",
                            DueDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Website Redesign",
                            Status = "Active",
                            UpdatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Develop cross-platform mobile application",
                            DueDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mobile App Development",
                            Status = "Planning",
                            UpdatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Document all REST API endpoints with examples",
                            DueDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "API Documentation",
                            Status = "Completed",
                            UpdatedDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("gofundraise3.Entities.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Design initial wireframes for all pages",
                            DueDate = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Priority = "High",
                            ProjectId = 1,
                            Status = "Done",
                            Title = "Create wireframes",
                            UpdatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Make website mobile-friendly and responsive",
                            DueDate = new DateTime(2025, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Priority = "High",
                            ProjectId = 1,
                            Status = "InProgress",
                            Title = "Implement responsive design",
                            UpdatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Evaluate React Native vs Flutter for mobile development",
                            DueDate = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Priority = "Medium",
                            ProjectId = 2,
                            Status = "Todo",
                            Title = "Research frameworks",
                            UpdatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Document all endpoints with request/response examples",
                            DueDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Priority = "Medium",
                            ProjectId = 3,
                            Status = "Done",
                            Title = "Write API documentation",
                            UpdatedDate = new DateTime(2024, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("gofundraise3.Entities.TaskItem", b =>
                {
                    b.HasOne("gofundraise3.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("gofundraise3.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
